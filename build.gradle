plugins {
    id "application"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

allprojects {
    group = 'com.googlecode.d2j'
    version = '2.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = targetCompatibility = 1.8

    dependencies {
        implementation fileTree(dir: 'libs', include: '*.jar')
        testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.9.1'
        testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.9.1'
    }

    [compileJava, compileTestJava]*.options.collect { options -> options.encoding = 'UTF-8' }

    // Cache list of tasks
    project.getAllTasks(true)

    publishing {
        publications {
            if (tasks.findByName("shadowJar") == null)
                mavenJava(MavenPublication) {
                    from(components.java)
                }
            else
                mavenJava(MavenPublication) {
                    artifact(tasks.findByName("shadowJar"))
                }
        }
    }
}

mainClassName = "com.googlecode.dex2jar.tools.Dex2jarCmd"
archivesBaseName = "dex2jar"

dependencies {
    implementation(project(":d2j-base-cmd")) {
        transitive = false
    }
    implementation(project(":d2j-external")) // Transitive please
    implementation(project(":d2j-jasmin")) {
        transitive = false
    }
    implementation(project(":d2j-smali")) {
        transitive = false
    }
    implementation(project(":dex-ir")) {
        transitive = false
    }
    implementation(project(":dex-reader")) {
        transitive = false
    }
    implementation(project(":dex-reader-api")) {
        transitive = false
    }
    implementation(project(":dex-tools")) {
        transitive = false
    }
    implementation(project(":dex-translator")) {
        transitive = false
    }
    implementation(project(":dex-writer")) {
        transitive = false
    }
}

tasks.jar.enabled = false // Don't build normal jar

shadowJar {
    archiveClassifier.set(null)
}

// Get rid of Gradle warnings
tasks.distTar.dependsOn tasks.shadowJar
tasks.distZip.dependsOn tasks.shadowJar
tasks.startScripts.dependsOn tasks.shadowJar
